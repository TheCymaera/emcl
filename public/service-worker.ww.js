!function(){"use strict";class t{constructor(e=t.global.registration.scope+".static"){this.responders=new Map,this.querySettings={ignoreMethod:!1,ignoreSearch:!0,ignoreVary:!0},this.cacheName=e}addResponder(e,a){const s=new URL(e,t.global.registration.scope).href;return this.responders.set(s,a),this}async cache(){return caches.open(this.cacheName)}async recreateCache(t){await caches.delete(this.cacheName);const e=await this.cache();t&&await e.addAll([...t])}async getResponseFromCache(t){return await(await this.cache()).match(t,this.querySettings)}async getResponse(t,e){const a=this.responders.get(t.url);if(a)return a.call(this,t,e);const s=await this.getResponseFromCache(t);return s||await fetch(t)}}t.global=self,t.CACHE_MOST_RECENT_RESPONDER=async function(t,e){const a=await this.cache();try{const s=await fetch(t);return e.push(a.put(t,s.clone())),s}catch(e){const s=await a.match(t,this.querySettings);if(s)return s;throw e}},t.global.addEventListener("install",(e=>{console.log("[SERVICE WORKER]: Installing..."),e.waitUntil((async()=>{console.log("[SERVICE WORKER]: Installed Successfully."),t.global.skipWaiting()})())})),t.global.addEventListener("activate",(e=>{console.log("[SERVICE WORKER]: Activating..."),console.log("[SERVICE WORKER]: Activated Successfully."),t.global.clients.claim()})),t.global.addEventListener("fetch",(function(t){}))}();
//# sourceMappingURL=service-worker.ww.js.map
